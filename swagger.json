{"swagger": "2.0", "info": {"title": "Banister API", "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/api/v1", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header", "description": "Enter your JWT token here (without \"Bearer\" prefix). The system will automatically add \"Bearer \" to your token."}}, "security": [{"Bearer": []}], "paths": {"/admin/login/": {"post": {"operationId": "admin_login_create", "description": "Login for admin users with username/email", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"user": {"type": "object"}, "access": {"type": "string"}, "refresh": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["admin"]}, "parameters": []}, "/admin/permissions/": {"get": {"operationId": "admin_permissions_list", "description": "List all admin permissions", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"count": {"type": "integer"}, "results": {"type": "array", "items": {"type": "object"}}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["admin"]}, "post": {"operationId": "admin_permissions_create", "description": "Create new admin permission", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AdminPermissionManage"}}], "responses": {"201": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "admin": {"type": "object"}, "permission_name": {"type": "string"}, "can_access": {"type": "boolean"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["admin"]}, "parameters": []}, "/admin/permissions/by-admin/{admin_id}/": {"get": {"operationId": "admin_permissions_by-admin_read", "description": "Get all permissions for specific admin", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"count": {"type": "integer"}, "results": {"type": "array", "items": {"type": "object"}}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["admin"]}, "post": {"operationId": "admin_permissions_by-admin_create", "description": "Get all permissions for a specific admin", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AdminPermission"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AdminPermission"}}}, "tags": ["admin"]}, "parameters": [{"name": "admin_id", "in": "path", "required": true, "type": "string"}]}, "/admin/permissions/{id}/": {"get": {"operationId": "admin_permissions_read", "description": "Get admin permission details", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AdminPermission"}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["admin"]}, "put": {"operationId": "admin_permissions_update", "description": "Update admin permission", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AdminPermissionManage"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AdminPermission"}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["admin"]}, "patch": {"operationId": "admin_permissions_partial_update", "description": "Partially update admin permission", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AdminPermissionManage"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AdminPermission"}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["admin"]}, "delete": {"operationId": "admin_permissions_delete", "description": "Delete admin permission", "parameters": [], "responses": {"204": {"description": "", "schema": {"type": "object"}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["admin"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/admin/register/": {"post": {"operationId": "admin_register_create", "description": "Register a new admin user (super_admin only)", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AdminUserCreate"}}], "responses": {"201": {"description": "", "schema": {"type": "object", "properties": {"user": {"type": "object"}, "message": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["admin"]}, "parameters": []}, "/admin/users/": {"get": {"operationId": "admin_users_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["admin"]}, "post": {"operationId": "admin_users_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserCreate"}}}, "tags": ["admin"]}, "parameters": []}, "/admin/users/{id}/": {"get": {"operationId": "admin_users_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["admin"]}, "put": {"operationId": "admin_users_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserUpdate"}}}, "tags": ["admin"]}, "patch": {"operationId": "admin_users_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserUpdate"}}}, "tags": ["admin"]}, "delete": {"operationId": "admin_users_delete", "description": "Delete user (only for authorized roles)", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["admin"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/admin/users/{id}/admin_update/": {"patch": {"operationId": "admin_users_admin_update", "description": "Update admin profile information", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AdminProfileUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "role": {"type": "string"}, "phone": {"type": "string"}, "email_verified": {"type": "boolean"}, "provider_verified": {"type": "boolean"}, "profile_photo": {"type": "string"}, "date_joined": {"type": "string", "format": "date-time"}, "last_login": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["admin"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/admin/users/{id}/toggle_verification/": {"post": {"operationId": "admin_users_toggle_verification", "description": "Toggle user verification status", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ToggleVerification"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"status": {"type": "string"}, "verified": {"type": "boolean"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["admin"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/auth/fcm-token/list/": {"get": {"operationId": "auth_fcm-token_list_list", "description": "Get user's FCM tokens", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"tokens": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer"}, "token": {"type": "string"}, "device_type": {"type": "string"}, "is_active": {"type": "boolean"}, "created_at": {"type": "string"}, "updated_at": {"type": "string"}}}}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/fcm-token/register/": {"post": {"operationId": "auth_fcm-token_register_create", "description": "Register FCM token for push notifications", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FCMToken"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/fcm-token/unregister/": {"post": {"operationId": "auth_fcm-token_unregister_create", "description": "Unregister FCM token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["token"], "type": "object", "properties": {"token": {"type": "string"}}}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/login/": {"post": {"operationId": "auth_login_create", "description": "Login user with username/email and password", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"access": {"type": "string"}, "refresh": {"type": "string"}, "user": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "role": {"type": "string"}, "phone": {"type": "string"}, "email_verified": {"type": "boolean"}, "provider_verified": {"type": "boolean"}, "profile_photo": {"type": "string"}, "date_joined": {"type": "string", "format": "date-time"}, "last_login": {"type": "string", "format": "date-time"}}}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/password-reset-confirm/": {"post": {"operationId": "auth_password-reset-confirm_create", "description": "Confirm password reset with code", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordResetConfirm"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/password-reset-request/": {"post": {"operationId": "auth_password-reset-request_create", "description": "Request password reset", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordResetRequest"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/profile/": {"get": {"operationId": "auth_profile_read", "description": "Get user profile information", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "role": {"type": "string"}, "phone": {"type": "string"}, "email_verified": {"type": "boolean"}, "provider_verified": {"type": "boolean"}, "profile_photo": {"type": "string"}, "date_joined": {"type": "string", "format": "date-time"}, "last_login": {"type": "string", "format": "date-time"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "put": {"operationId": "auth_profile_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserUpdate"}}}, "tags": ["auth"]}, "patch": {"operationId": "auth_profile_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserUpdate"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/profile/delete/": {"delete": {"operationId": "auth_profile_delete_delete", "description": "Delete user profile (only own profile)", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/refresh/": {"post": {"operationId": "auth_refresh_create", "description": "Refresh access token using refresh token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Refresh"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"access": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/register/": {"post": {"operationId": "auth_register_create", "description": "Register a new user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserCreate"}}], "responses": {"201": {"description": "", "schema": {"type": "object", "properties": {"user": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "role": {"type": "string"}, "phone": {"type": "string"}, "email_verified": {"type": "boolean"}, "provider_verified": {"type": "boolean"}, "profile_photo": {"type": "string"}, "date_joined": {"type": "string", "format": "date-time"}, "last_login": {"type": "string", "format": "date-time"}}}, "message": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/send-verification/": {"post": {"operationId": "auth_send-verification_create", "description": "Send verification email to user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SendVerificationEmail"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/upload-photo/": {"post": {"operationId": "auth_upload-photo_create", "description": "Upload user profile photo", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProfilePhotoUpload"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "profile_photo_url": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/auth/verify-email/": {"post": {"operationId": "auth_verify-email_create", "description": "Verify user email with code", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VerifyEmail"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["auth"]}, "parameters": []}, "/bookings/": {"get": {"operationId": "bookings_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Booking"}}}}}}, "tags": ["bookings"]}, "post": {"operationId": "bookings_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BookingCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/BookingCreate"}}}, "tags": ["bookings"]}, "parameters": []}, "/bookings/{id}/": {"get": {"operationId": "bookings_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["bookings"]}, "put": {"operationId": "bookings_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BookingUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BookingUpdate"}}}, "tags": ["bookings"]}, "patch": {"operationId": "bookings_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BookingUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BookingUpdate"}}}, "tags": ["bookings"]}, "delete": {"operationId": "bookings_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bookings"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this booking.", "required": true, "type": "integer"}]}, "/chat/messages/": {"get": {"operationId": "chat_messages_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Message"}}}}}}, "tags": ["chat"]}, "post": {"operationId": "chat_messages_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MessageCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MessageCreate"}}}, "tags": ["chat"]}, "parameters": []}, "/chat/messages/{id}/": {"get": {"operationId": "chat_messages_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["chat"]}, "put": {"operationId": "chat_messages_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MessageUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MessageUpdate"}}}, "tags": ["chat"]}, "patch": {"operationId": "chat_messages_partial_update", "description": "Update message", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MessageUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "content": {"type": "string"}, "sender": {"type": "string"}, "created_at": {"type": "string"}, "updated_at": {"type": "string"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["chat"]}, "delete": {"operationId": "chat_messages_delete", "description": "Delete message (soft delete)", "parameters": [], "responses": {"204": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["chat"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Message.", "required": true, "type": "integer"}]}, "/chat/rooms/": {"get": {"operationId": "chat_rooms_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ChatRoom"}}}}}}, "tags": ["chat"]}, "post": {"operationId": "chat_rooms_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChatRoomCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ChatRoomCreate"}}}, "tags": ["chat"]}, "parameters": []}, "/chat/rooms/{id}/": {"get": {"operationId": "chat_rooms_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatRoom"}}}, "tags": ["chat"]}, "put": {"operationId": "chat_rooms_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChatRoomUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatRoomUpdate"}}}, "tags": ["chat"]}, "patch": {"operationId": "chat_rooms_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChatRoomUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatRoomUpdate"}}}, "tags": ["chat"]}, "delete": {"operationId": "chat_rooms_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["chat"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Chat Room.", "required": true, "type": "integer"}]}, "/chat/rooms/{room_id}/messages/": {"get": {"operationId": "chat_rooms_messages_list", "description": "Get messages for a specific room", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string"}, "previous": {"type": "string"}, "results": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer"}, "content": {"type": "string"}, "sender": {"type": "string"}, "created_at": {"type": "string"}, "updated_at": {"type": "string"}}}}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["chat"]}, "parameters": [{"name": "room_id", "in": "path", "required": true, "type": "string"}]}, "/customer-dashboard/": {"get": {"operationId": "customer-dashboard_read", "description": "Retrieve or update customer dashboard", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "preferred_services": {"type": "array", "items": {"type": "integer"}}, "booking_history_count": {"type": "integer"}, "total_spent": {"type": "number"}, "favorite_providers": {"type": "array", "items": {"type": "integer"}}, "notification_preferences": {"type": "object"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Customer Dashboard"]}, "put": {"operationId": "customer-dashboard_update", "description": "Update customer dashboard", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomerDashboardUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "preferred_services": {"type": "array", "items": {"type": "integer"}}, "booking_history_count": {"type": "integer"}, "total_spent": {"type": "number"}, "favorite_providers": {"type": "array", "items": {"type": "integer"}}, "notification_preferences": {"type": "object"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Customer Dashboard"]}, "patch": {"operationId": "customer-dashboard_partial_update", "description": "Partially update customer dashboard", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomerDashboardUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "preferred_services": {"type": "array", "items": {"type": "integer"}}, "booking_history_count": {"type": "integer"}, "total_spent": {"type": "number"}, "favorite_providers": {"type": "array", "items": {"type": "integer"}}, "notification_preferences": {"type": "object"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Customer Dashboard"]}, "parameters": []}, "/documents/": {"get": {"operationId": "documents_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Document"}}}}}}, "tags": ["documents"]}, "post": {"operationId": "documents_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DocumentCreate"}}}, "tags": ["documents"]}, "parameters": []}, "/documents/{id}/": {"get": {"operationId": "documents_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["documents"]}, "put": {"operationId": "documents_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DocumentUpdate"}}}, "tags": ["documents"]}, "patch": {"operationId": "documents_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DocumentUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DocumentUpdate"}}}, "tags": ["documents"]}, "delete": {"operationId": "documents_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["documents"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Document.", "required": true, "type": "integer"}]}, "/interview-requests/": {"get": {"operationId": "interview-requests_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/InterviewRequest"}}}}}}, "tags": ["interview-requests"]}, "post": {"operationId": "interview-requests_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InterviewRequestCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/InterviewRequestCreate"}}}, "tags": ["interview-requests"]}, "parameters": []}, "/interview-requests/{id}/": {"get": {"operationId": "interview-requests_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InterviewRequest"}}}, "tags": ["interview-requests"]}, "put": {"operationId": "interview-requests_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InterviewRequestUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InterviewRequestUpdate"}}}, "tags": ["interview-requests"]}, "patch": {"operationId": "interview-requests_partial_update", "description": "Update interview request status", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InterviewRequestUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "status": {"type": "string"}, "admin_response": {"type": "string"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["interview-requests"]}, "delete": {"operationId": "interview-requests_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["interview-requests"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Interview Request.", "required": true, "type": "integer"}]}, "/interviews/": {"get": {"operationId": "interviews_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Interview"}}}}}}, "tags": ["interviews"]}, "post": {"operationId": "interviews_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InterviewCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/InterviewCreate"}}}, "tags": ["interviews"]}, "parameters": []}, "/interviews/{id}/": {"get": {"operationId": "interviews_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Interview"}}}, "tags": ["interviews"]}, "put": {"operationId": "interviews_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InterviewUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InterviewUpdate"}}}, "tags": ["interviews"]}, "patch": {"operationId": "interviews_partial_update", "description": "Update interview status and schedule", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InterviewUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "status": {"type": "string"}, "scheduled_datetime": {"type": "string"}, "google_meet_link": {"type": "string"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["interviews"]}, "delete": {"operationId": "interviews_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["interviews"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Interview.", "required": true, "type": "integer"}]}, "/management-dashboard/": {"get": {"operationId": "management-dashboard_read", "description": "Retrieve or update management dashboard", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "total_customers_managed": {"type": "integer"}, "total_issues_resolved": {"type": "integer"}, "total_issues_pending": {"type": "integer"}, "total_revenue_managed": {"type": "number"}, "total_providers_managed": {"type": "integer"}, "system_health_status": {"type": "string"}, "last_maintenance_date": {"type": "string", "format": "date"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Management Dashboard"]}, "put": {"operationId": "management-dashboard_update", "description": "Update management dashboard", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManagementDashboardUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "total_customers_managed": {"type": "integer"}, "total_issues_resolved": {"type": "integer"}, "total_issues_pending": {"type": "integer"}, "total_revenue_managed": {"type": "number"}, "total_providers_managed": {"type": "integer"}, "system_health_status": {"type": "string"}, "last_maintenance_date": {"type": "string", "format": "date"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Management Dashboard"]}, "patch": {"operationId": "management-dashboard_partial_update", "description": "Partially update management dashboard", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ManagementDashboardUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "total_customers_managed": {"type": "integer"}, "total_issues_resolved": {"type": "integer"}, "total_issues_pending": {"type": "integer"}, "total_revenue_managed": {"type": "number"}, "total_providers_managed": {"type": "integer"}, "system_health_status": {"type": "string"}, "last_maintenance_date": {"type": "string", "format": "date"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Management Dashboard"]}, "parameters": []}, "/notifications/": {"get": {"operationId": "notifications_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Notification"}}}}}}, "tags": ["notifications"]}, "post": {"operationId": "notifications_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NotificationCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/NotificationCreate"}}}, "tags": ["notifications"]}, "parameters": []}, "/notifications/delete-all/": {"delete": {"operationId": "notifications_delete-all_delete", "description": "Delete all notifications for current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "deleted_count": {"type": "integer"}}}}}, "tags": ["notifications"]}, "parameters": []}, "/notifications/mark-all-read/": {"patch": {"operationId": "notifications_mark-all-read_partial_update", "description": "Mark all notifications as read for current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "updated_count": {"type": "integer"}}}}}, "tags": ["notifications"]}, "parameters": []}, "/notifications/unread-count/": {"get": {"operationId": "notifications_unread-count_list", "description": "Get unread notifications count", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"unread_count": {"type": "integer"}}}}}, "tags": ["notifications"]}, "parameters": []}, "/notifications/{id}/": {"get": {"operationId": "notifications_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Notification"}}}, "tags": ["notifications"]}, "put": {"operationId": "notifications_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NotificationUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/NotificationUpdate"}}}, "tags": ["notifications"]}, "patch": {"operationId": "notifications_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NotificationUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/NotificationUpdate"}}}, "tags": ["notifications"]}, "delete": {"operationId": "notifications_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["notifications"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Notification.", "required": true, "type": "integer"}]}, "/notifications/{id}/mark-read/": {"patch": {"operationId": "notifications_mark-read_partial_update", "description": "Mark notification as read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["notifications"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/payments/": {"get": {"operationId": "payments_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Payment"}}}}}}, "tags": ["payments"]}, "post": {"operationId": "payments_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PaymentCreate"}}}, "tags": ["payments"]}, "parameters": []}, "/payments/client-secret/": {"post": {"operationId": "payments_client-secret_create", "description": "Get Stripe client secret for payment", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["payment_id"], "type": "object", "properties": {"payment_id": {"type": "integer"}}}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"client_secret": {"type": "string"}, "payment_intent_id": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["Payments"]}, "parameters": []}, "/payments/confirm/": {"post": {"operationId": "payments_confirm_create", "description": "Confirm payment with Stripe", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentConfirm"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"status": {"type": "string"}, "message": {"type": "string"}, "payment_id": {"type": "integer"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["Payments"]}, "parameters": []}, "/payments/transfer/": {"post": {"operationId": "payments_transfer_create", "description": "Transfer payment to provider", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentTransfer"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"status": {"type": "string"}, "message": {"type": "string"}, "transfer_id": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["Payments"]}, "parameters": []}, "/payments/{id}/": {"get": {"operationId": "payments_read", "description": "Retrieve or update payment", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "booking": {"type": "integer"}, "customer": {"type": "integer"}, "provider": {"type": "integer"}, "service": {"type": "integer"}, "amount": {"type": "number"}, "currency": {"type": "string"}, "status": {"type": "string"}, "stripe_payment_intent_id": {"type": "string"}, "stripe_transfer_id": {"type": "string"}, "created_at": {"type": "string", "format": "date-time"}, "completed_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Payments"]}, "put": {"operationId": "payments_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PaymentUpdate"}}}, "tags": ["payments"]}, "patch": {"operationId": "payments_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PaymentUpdate"}}}, "tags": ["payments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Payment.", "required": true, "type": "integer"}]}, "/provider-dashboard/": {"get": {"operationId": "provider-dashboard_read", "description": "Retrieve or update provider dashboard", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "calendar_view_type": {"type": "string"}, "working_hours_start": {"type": "string"}, "working_hours_end": {"type": "string"}, "commission_rate": {"type": "number"}, "email_notifications": {"type": "boolean"}, "sms_notifications": {"type": "boolean"}, "vacation_mode": {"type": "boolean"}, "vacation_start": {"type": "string", "format": "date"}, "vacation_end": {"type": "string", "format": "date"}, "total_earnings": {"type": "number"}, "total_bookings": {"type": "integer"}, "average_rating": {"type": "number"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Provider Dashboard"]}, "put": {"operationId": "provider-dashboard_update", "description": "Update provider dashboard", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProviderDashboardUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "calendar_view_type": {"type": "string"}, "working_hours_start": {"type": "string"}, "working_hours_end": {"type": "string"}, "commission_rate": {"type": "number"}, "email_notifications": {"type": "boolean"}, "sms_notifications": {"type": "boolean"}, "vacation_mode": {"type": "boolean"}, "vacation_start": {"type": "string", "format": "date"}, "vacation_end": {"type": "string", "format": "date"}, "total_earnings": {"type": "number"}, "total_bookings": {"type": "integer"}, "average_rating": {"type": "number"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Provider Dashboard"]}, "patch": {"operationId": "provider-dashboard_partial_update", "description": "Partially update provider dashboard", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProviderDashboardUpdate"}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "user": {"type": "integer"}, "calendar_view_type": {"type": "string"}, "working_hours_start": {"type": "string"}, "working_hours_end": {"type": "string"}, "commission_rate": {"type": "number"}, "email_notifications": {"type": "boolean"}, "sms_notifications": {"type": "boolean"}, "vacation_mode": {"type": "boolean"}, "vacation_start": {"type": "string", "format": "date"}, "vacation_end": {"type": "string", "format": "date"}, "total_earnings": {"type": "number"}, "total_bookings": {"type": "integer"}, "average_rating": {"type": "number"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Provider Dashboard"]}, "parameters": []}, "/schedules/": {"get": {"operationId": "schedules_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Schedule"}}}}}}, "tags": ["schedules"]}, "post": {"operationId": "schedules_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ScheduleCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ScheduleCreate"}}}, "tags": ["schedules"]}, "parameters": []}, "/schedules/{id}/": {"get": {"operationId": "schedules_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Schedule"}}}, "tags": ["schedules"]}, "put": {"operationId": "schedules_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ScheduleUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ScheduleUpdate"}}}, "tags": ["schedules"]}, "patch": {"operationId": "schedules_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ScheduleUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ScheduleUpdate"}}}, "tags": ["schedules"]}, "delete": {"operationId": "schedules_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["schedules"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Schedule.", "required": true, "type": "integer"}]}, "/services/": {"get": {"operationId": "services_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Service"}}}}}}, "tags": ["services"]}, "post": {"operationId": "services_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ServiceCreate"}}}, "tags": ["services"]}, "parameters": []}, "/services/{id}/": {"get": {"operationId": "services_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Service"}}}, "tags": ["services"]}, "put": {"operationId": "services_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceUpdate"}}}, "tags": ["services"]}, "patch": {"operationId": "services_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceUpdate"}}}, "tags": ["services"]}, "delete": {"operationId": "services_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["services"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Service.", "required": true, "type": "integer"}]}, "/stripe/account/create/": {"post": {"operationId": "stripe_account_create_create", "description": "Create Stripe connected account for provider", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"account_id": {"type": "string"}, "account_link": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["Payments"]}, "parameters": []}, "/test-google-meet/": {"post": {"operationId": "test-google-meet_create", "description": "Test Google Meet integration by sending meeting invite to verified users", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "event_id": {"type": "string"}, "meet_link": {"type": "string"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}}, "tags": ["test-google-meet"]}, "parameters": []}, "/withdrawals/": {"get": {"operationId": "withdrawals_list", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Withdrawal"}}}}}}, "tags": ["withdrawals"]}, "post": {"operationId": "withdrawals_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WithdrawalCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WithdrawalCreate"}}}, "tags": ["withdrawals"]}, "parameters": []}, "/withdrawals/{id}/": {"get": {"operationId": "withdrawals_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Withdrawal"}}}, "tags": ["withdrawals"]}, "put": {"operationId": "withdrawals_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WithdrawalUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WithdrawalUpdate"}}}, "tags": ["withdrawals"]}, "patch": {"operationId": "withdrawals_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WithdrawalUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WithdrawalUpdate"}}}, "tags": ["withdrawals"]}, "delete": {"operationId": "withdrawals_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["withdrawals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Withdrawal.", "required": true, "type": "integer"}]}, "/withdrawals/{id}/approve/": {"patch": {"operationId": "withdrawals_approve_partial_update", "description": "Approve withdrawal request", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"status": {"type": "string"}, "message": {"type": "string"}, "withdrawal_id": {"type": "integer"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Withdrawals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Withdrawal.", "required": true, "type": "integer"}]}, "/withdrawals/{id}/reject/": {"patch": {"operationId": "withdrawals_reject_partial_update", "description": "Reject withdrawal request", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"status": {"type": "string"}, "message": {"type": "string"}, "withdrawal_id": {"type": "integer"}}}}, "400": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 400}, "errorCode": {"type": "integer", "example": 1012}, "exceptionType": {"type": "string", "example": "ValidationException"}, "message": {"type": "string", "example": "1012: Passwords do not match"}, "error": {"type": "string", "example": "Password and password confirmation do not match"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/auth/register/"}, "method": {"type": "string", "example": "POST"}}}}, "401": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 401}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "UnauthorizedException"}, "message": {"type": "string", "example": "1005: Authentication required"}, "error": {"type": "string", "example": "Authentication credentials were not provided"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/documents/"}, "method": {"type": "string", "example": "POST"}}}}, "403": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 403}, "errorCode": {"type": "integer", "example": 1005}, "exceptionType": {"type": "string", "example": "PermissionException"}, "message": {"type": "string", "example": "1005: Permission denied"}, "error": {"type": "string", "example": "You don't have permission to perform this action"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/admin/users/"}, "method": {"type": "string", "example": "POST"}}}}, "404": {"description": "", "schema": {"type": "object", "properties": {"statusCode": {"type": "integer", "example": 404}, "errorCode": {"type": "integer", "example": 2001}, "exceptionType": {"type": "string", "example": "NotFoundException"}, "message": {"type": "string", "example": "2001: Booking not found"}, "error": {"type": "string", "example": "Booking with specified ID does not exist"}, "timestamp": {"type": "string", "example": "2025-08-24T07:47:24.123456+00:00"}, "endpoint": {"type": "string", "example": "/api/v1/bookings/123/"}, "method": {"type": "string", "example": "GET"}}}}}, "tags": ["Withdrawals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Withdrawal.", "required": true, "type": "integer"}]}}, "definitions": {"Login": {"required": ["username_or_email", "password"], "type": "object", "properties": {"username_or_email": {"title": "Username or email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "AdminPermissionManage": {"required": ["admin_id", "permission_name", "can_access"], "type": "object", "properties": {"admin_id": {"title": "Admin id", "type": "integer"}, "permission_name": {"title": "Permission name", "type": "string", "maxLength": 100, "minLength": 1}, "can_access": {"title": "Can access", "type": "boolean"}}}, "AdminPermission": {"required": ["permission_name", "admin"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "permission_name": {"title": "Permission name", "type": "string", "maxLength": 100, "minLength": 1}, "can_access": {"title": "Can access", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "admin": {"title": "Admin", "type": "integer"}}}, "AdminUserCreate": {"required": ["username", "email", "password", "password_confirm"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "password": {"title": "Password", "type": "string", "maxLength": 128, "minLength": 1}, "password_confirm": {"title": "Password confirm", "type": "string", "minLength": 1}, "role": {"title": "Role", "type": "string", "enum": ["super_admin", "admin", "hr", "supervisor", "customer", "service_provider"]}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "x-nullable": true}, "location": {"title": "Location", "type": "string", "maxLength": 255, "x-nullable": true}}}, "User": {"required": ["username", "email"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "role": {"title": "Role", "type": "string", "enum": ["super_admin", "admin", "hr", "supervisor", "customer", "service_provider"]}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "x-nullable": true}, "location": {"title": "Location", "type": "string", "maxLength": 255, "x-nullable": true}, "profile_photo": {"title": "Profile photo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "email_verified": {"title": "Email verified", "type": "boolean", "readOnly": true}, "firebase_token": {"title": "Firebase token", "type": "string", "x-nullable": true}, "stripe_account_id": {"title": "Stripe account id", "type": "string", "maxLength": 255, "x-nullable": true}, "provider_verified": {"title": "Provider verified", "type": "boolean", "readOnly": true}, "provider_rating": {"title": "Provider rating", "type": "string", "format": "decimal"}, "provider_hourly_rate": {"title": "Provider hourly rate", "type": "string", "format": "decimal"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "UserCreate": {"required": ["username", "email", "password", "password_confirm"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "password": {"title": "Password", "type": "string", "maxLength": 128, "minLength": 1}, "password_confirm": {"title": "Password confirm", "type": "string", "minLength": 1}, "role": {"title": "Role", "type": "string", "enum": ["super_admin", "admin", "hr", "supervisor", "customer", "service_provider"]}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "x-nullable": true}, "location": {"title": "Location", "type": "string", "maxLength": 255, "x-nullable": true}}}, "UserUpdate": {"type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "x-nullable": true}, "location": {"title": "Location", "type": "string", "maxLength": 255, "x-nullable": true}}}, "AdminProfileUpdate": {"type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}}}, "ToggleVerification": {"required": ["type"], "type": "object", "properties": {"type": {"title": "Type", "type": "string", "enum": ["email", "provider"]}}}, "FCMToken": {"required": ["token"], "type": "object", "properties": {"token": {"title": "Token", "type": "string", "maxLength": 255, "minLength": 1}, "device_type": {"title": "Device type", "type": "string", "enum": ["web", "android", "ios"]}}}, "PasswordResetConfirm": {"required": ["email", "code", "new_password", "new_password_confirm"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "code": {"title": "Code", "type": "string", "maxLength": 4, "minLength": 4}, "new_password": {"title": "New password", "type": "string", "minLength": 8}, "new_password_confirm": {"title": "New password confirm", "type": "string", "minLength": 8}}}, "PasswordResetRequest": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "Refresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}}}, "SendVerificationEmail": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "ProfilePhotoUpload": {"type": "object", "properties": {"photo": {"title": "Photo", "type": "string", "readOnly": true, "format": "uri"}}}, "VerifyEmail": {"required": ["email", "code"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "code": {"title": "Code", "type": "string", "maxLength": 4, "minLength": 4}}}, "Booking": {"required": ["customer", "service", "provider"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "customer": {"title": "Customer", "type": "integer"}, "service": {"title": "Service", "type": "integer"}, "provider": {"title": "Provider", "type": "integer"}, "location": {"title": "Location", "type": "string", "maxLength": 255, "x-nullable": true}, "preferred_date": {"title": "Preferred date", "type": "string", "format": "date", "x-nullable": true}, "preferred_time": {"title": "Preferred time", "type": "string", "x-nullable": true}, "scheduled_datetime": {"title": "Scheduled datetime", "type": "string", "format": "date-time", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["pending", "confirmed", "cancelled", "completed"]}, "notes": {"title": "Notes", "type": "string", "x-nullable": true}, "total_price": {"title": "Total price", "type": "string", "format": "decimal", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "BookingCreate": {"required": ["service"], "type": "object", "properties": {"service": {"title": "Service", "type": "integer"}, "preferred_date": {"title": "Preferred date", "type": "string", "format": "date", "x-nullable": true}, "preferred_time": {"title": "Preferred time", "type": "string", "x-nullable": true}, "notes": {"title": "Notes", "type": "string", "x-nullable": true}}}, "BookingUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["pending", "confirmed", "cancelled", "completed"]}, "scheduled_datetime": {"title": "Scheduled datetime", "type": "string", "format": "date-time", "x-nullable": true}, "notes": {"title": "Notes", "type": "string", "x-nullable": true}, "total_price": {"title": "Total price", "type": "string", "format": "decimal", "x-nullable": true}}}, "Message": {"required": ["content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "content": {"title": "Content", "type": "string", "minLength": 1}, "sender_username": {"title": "Sender username", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "is_deleted": {"title": "Is deleted", "type": "boolean"}}}, "MessageCreate": {"required": ["content", "room"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "content": {"title": "Content", "type": "string", "minLength": 1}, "room": {"title": "Room", "type": "integer"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "MessageUpdate": {"required": ["content"], "type": "object", "properties": {"content": {"title": "Content", "type": "string", "minLength": 1}}}, "ChatRoom": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "participants_count": {"title": "Participants count", "type": "integer", "readOnly": true}, "is_private": {"title": "Is private", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "last_message": {"title": "Last message", "type": "string", "readOnly": true}}}, "ChatRoomCreate": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "is_private": {"title": "Is private", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "ChatRoomUpdate": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "is_private": {"title": "Is private", "type": "boolean"}}}, "CustomerDashboardUpdate": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "calendar_view_type": {"title": "Calendar view type", "type": "string", "enum": ["day", "week", "month"]}, "email_notifications": {"title": "Email notifications", "type": "boolean"}, "sms_notifications": {"title": "Sms notifications", "type": "boolean"}, "vacation_mode": {"title": "Vacation mode", "type": "boolean"}, "vacation_start": {"title": "Vacation start", "type": "string", "format": "date", "x-nullable": true}, "vacation_end": {"title": "Vacation end", "type": "string", "format": "date", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "user": {"title": "User", "type": "integer"}}}, "Document": {"required": ["title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "file_path": {"title": "File path", "type": "string", "readOnly": true}, "file_type": {"title": "File type", "type": "string", "readOnly": true}, "file_size": {"title": "File size", "type": "string", "readOnly": true}, "file_extension": {"title": "File extension", "type": "string", "readOnly": true}, "uploaded_by": {"title": "Uploaded by", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "DocumentCreate": {"required": ["title"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}}}, "DocumentUpdate": {"required": ["title"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}}}, "InterviewRequest": {"required": ["provider", "service", "message"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "provider": {"title": "Provider", "type": "integer"}, "provider_username": {"title": "Provider username", "type": "string", "readOnly": true, "minLength": 1}, "provider_email": {"title": "Provider email", "type": "string", "readOnly": true, "minLength": 1}, "service": {"title": "Service", "type": "integer"}, "service_title": {"title": "Service title", "type": "string", "readOnly": true, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected"]}, "message": {"title": "Message", "description": "Provider's message to admin", "type": "string", "minLength": 1}, "admin_response": {"title": "Admin response", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "InterviewRequestCreate": {"required": ["service", "message"], "type": "object", "properties": {"service": {"title": "Service", "type": "integer"}, "message": {"title": "Message", "description": "Provider's message to admin", "type": "string", "minLength": 1}}}, "InterviewRequestUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected"]}, "admin_response": {"title": "Admin response", "type": "string"}}}, "Interview": {"required": ["provider", "service"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "provider": {"title": "Provider", "type": "integer"}, "provider_username": {"title": "Provider username", "type": "string", "readOnly": true, "minLength": 1}, "provider_email": {"title": "Provider email", "type": "string", "readOnly": true, "minLength": 1}, "service": {"title": "Service", "type": "integer"}, "service_title": {"title": "Service title", "type": "string", "readOnly": true, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["pending", "scheduled", "completed", "rejected", "cancelled"]}, "scheduled_datetime": {"title": "Scheduled datetime", "type": "string", "format": "date-time", "x-nullable": true}, "google_calendar_event_id": {"title": "Google calendar event id", "type": "string", "readOnly": true, "minLength": 1}, "google_meet_link": {"title": "Google meet link", "type": "string", "format": "uri", "readOnly": true, "minLength": 1}, "notes": {"title": "Notes", "type": "string"}, "admin_notes": {"title": "Admin notes", "type": "string"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "InterviewCreate": {"required": ["service"], "type": "object", "properties": {"service": {"title": "Service", "type": "integer"}, "notes": {"title": "Notes", "type": "string"}}}, "InterviewUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["pending", "scheduled", "completed", "rejected", "cancelled"]}, "scheduled_datetime": {"title": "Scheduled datetime", "type": "string", "format": "date-time", "x-nullable": true}, "admin_notes": {"title": "Admin notes", "type": "string"}}}, "ManagementDashboardUpdate": {"type": "object", "properties": {"total_customers_managed": {"title": "Total customers managed", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "total_issues_resolved": {"title": "Total issues resolved", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "total_issues_pending": {"title": "Total issues pending", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}}}, "Notification": {"required": ["user", "notification_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "notification_type": {"title": "Notification type", "type": "string", "maxLength": 100, "minLength": 1}, "data": {"title": "Data", "type": "object"}, "is_read": {"title": "Is read", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "NotificationCreate": {"required": ["notification_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "notification_type": {"title": "Notification type", "type": "string", "maxLength": 100, "minLength": 1}, "data": {"title": "Data", "type": "object"}, "is_read": {"title": "Is read", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "NotificationUpdate": {"type": "object", "properties": {"is_read": {"title": "Is read", "type": "boolean"}}}, "Payment": {"required": ["booking", "amount"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "booking": {"title": "Booking", "type": "integer"}, "customer": {"title": "Customer", "type": "integer", "readOnly": true}, "provider": {"title": "Provider", "type": "integer", "readOnly": true}, "service": {"title": "Service", "type": "string", "readOnly": true}, "amount": {"title": "Amount", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "failed"]}, "stripe_payment_intent_id": {"title": "Stripe payment intent id", "type": "string", "maxLength": 255, "x-nullable": true}, "stripe_transfer_id": {"title": "Stripe transfer id", "type": "string", "maxLength": 255, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}}}, "PaymentCreate": {"required": ["booking", "amount"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "booking": {"title": "Booking", "type": "integer"}, "amount": {"title": "Amount", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "failed"], "readOnly": true}, "stripe_payment_intent_id": {"title": "Stripe payment intent id", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "service_title": {"title": "Service title", "type": "string", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "PaymentConfirm": {"required": ["payment_intent_id"], "type": "object", "properties": {"payment_intent_id": {"title": "Payment intent id", "type": "string", "minLength": 1}}}, "PaymentTransfer": {"required": ["payment_id", "provider_stripe_account"], "type": "object", "properties": {"payment_id": {"title": "Payment id", "type": "integer"}, "provider_stripe_account": {"title": "Provider stripe account", "type": "string", "minLength": 1}}}, "PaymentUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "failed"]}, "stripe_payment_intent_id": {"title": "Stripe payment intent id", "type": "string", "maxLength": 255, "x-nullable": true}}}, "ProviderDashboardUpdate": {"type": "object", "properties": {"calendar_view_type": {"title": "Calendar view type", "type": "string", "enum": ["day", "week", "month"]}, "working_hours_start": {"title": "Working hours start", "type": "string"}, "working_hours_end": {"title": "Working hours end", "type": "string"}, "commission_rate": {"title": "Commission rate", "type": "string", "format": "decimal"}, "email_notifications": {"title": "Email notifications", "type": "boolean"}, "sms_notifications": {"title": "Sms notifications", "type": "boolean"}, "vacation_mode": {"title": "Vacation mode", "type": "boolean"}, "vacation_start": {"title": "Vacation start", "type": "string", "format": "date", "x-nullable": true}, "vacation_end": {"title": "Vacation end", "type": "string", "format": "date", "x-nullable": true}}}, "Schedule": {"required": ["service", "day_of_week", "start_time", "end_time"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "service": {"title": "Service", "type": "integer"}, "service_title": {"title": "Service title", "type": "string", "readOnly": true}, "provider": {"title": "Provider", "type": "string", "readOnly": true}, "provider_name": {"title": "Provider name", "type": "string", "readOnly": true}, "service_provider_name": {"title": "Service provider name", "type": "string", "readOnly": true}, "day_of_week": {"title": "Day of week", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "day_of_week_display": {"title": "Day of week display", "type": "string", "readOnly": true}, "start_time": {"title": "Start time", "type": "string"}, "end_time": {"title": "End time", "type": "string"}, "is_available": {"title": "Is available", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "ScheduleCreate": {"required": ["service", "day_of_week", "start_time", "end_time"], "type": "object", "properties": {"service": {"title": "Service", "type": "integer"}, "day_of_week": {"title": "Day of week", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "start_time": {"title": "Start time", "type": "string"}, "end_time": {"title": "End time", "type": "string"}, "is_available": {"title": "Is available", "type": "boolean"}}}, "ScheduleUpdate": {"required": ["day_of_week", "start_time", "end_time"], "type": "object", "properties": {"day_of_week": {"title": "Day of week", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "start_time": {"title": "Start time", "type": "string"}, "end_time": {"title": "End time", "type": "string"}, "is_available": {"title": "Is available", "type": "boolean"}}}, "Service": {"required": ["title", "description", "price"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "price": {"title": "Price", "type": "string", "format": "decimal"}, "provider": {"title": "Provider", "type": "string", "readOnly": true}, "provider_name": {"title": "Provider name", "type": "string", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "ServiceCreate": {"required": ["title", "description", "price"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "price": {"title": "Price", "type": "string", "format": "decimal"}}}, "ServiceUpdate": {"required": ["title", "description", "price"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "price": {"title": "Price", "type": "string", "format": "decimal"}}}, "Withdrawal": {"required": ["user", "amount"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "amount": {"title": "Amount", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "maxLength": 10, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "rejected"]}, "stripe_transfer_id": {"title": "Stripe transfer id", "type": "string", "maxLength": 255, "x-nullable": true}, "reason": {"title": "Reason", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "x-nullable": true}}}, "WithdrawalCreate": {"required": ["amount"], "type": "object", "properties": {"amount": {"title": "Amount", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "maxLength": 10, "minLength": 1}}}, "WithdrawalUpdate": {"type": "object", "properties": {"status": {"title": "Status", "type": "string", "enum": ["pending", "completed", "rejected"]}, "stripe_transfer_id": {"title": "Stripe transfer id", "type": "string", "maxLength": 255, "x-nullable": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "x-nullable": true}, "reason": {"title": "Reason", "type": "string", "x-nullable": true}}}}}